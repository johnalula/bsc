<?php
App::uses('AppController', 'Controller');
/**
 * Evaluationtypes Controller
 *
 * @property Evaluationtype $Evaluationtype
 */
class EvaluationtypesController extends AppController {

/**
 * index method
 *
 * @return void
 */
	public function index() {
		$this->Evaluationtype->recursive = 0;
		$this->set('evaluationtypes', $this->paginate());
	}

/**
 * view method
 *
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function view($id = null) {
		$this->Evaluationtype->id = $id;
		if (!$this->Evaluationtype->exists()) {
			throw new NotFoundException(__('Invalid evaluationtype'));
		}
		$this->set('evaluationtype', $this->Evaluationtype->read(null, $id));
	}

/**
 * add method
 *
 * @return void
 */
	public function add() {
		if ($this->request->is('post')) {
			$this->Evaluationtype->create();
			if ($this->Evaluationtype->save($this->request->data)) {
				$this->Session->setFlash(__('The evaluationtype has been saved'));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The evaluationtype could not be saved. Please, try again.'));
			}
		}
     $years=array();
           for($i=6;$i<11;$i++){
              $years[date('Y')-$i]=date('Y')-$i;
             }
  	$year = $years;
$this->set(compact('year'));
	}

/**
 * edit method
 *
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function edit($id = null) {
		$this->Evaluationtype->id = $id;
		if (!$this->Evaluationtype->exists()) {
			throw new NotFoundException(__('Invalid evaluationtype'));
		}
		if ($this->request->is('post') || $this->request->is('put')) {
			if ($this->Evaluationtype->save($this->request->data)) {
				$this->Session->setFlash(__('The evaluationtype has been saved'));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The evaluationtype could not be saved. Please, try again.'));
			}
		} else {
			$this->request->data = $this->Evaluationtype->read(null, $id);
		}
	}

/**
 * delete method
 *
 * @throws MethodNotAllowedException
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function delete($id = null) {
		if (!$this->request->is('post')) {
			throw new MethodNotAllowedException();
		}
		$this->Evaluationtype->id = $id;
		if (!$this->Evaluationtype->exists()) {
			throw new NotFoundException(__('Invalid evaluationtype'));
		}
		if ($this->Evaluationtype->delete()) {
			$this->Session->setFlash(__('Evaluationtype deleted'));
			$this->redirect(array('action' => 'index'));
		}
		$this->Session->setFlash(__('Evaluationtype was not deleted'));
		$this->redirect(array('action' => 'index'));
	}
}
